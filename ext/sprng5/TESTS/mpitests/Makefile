# Makefile.in generated by automake 1.14.1 from Makefile.am.
# TESTS/mpitests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/sprng
pkgincludedir = $(includedir)/sprng
pkglibdir = $(libdir)/sprng
pkglibexecdir = $(libexecdir)/sprng
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = equidist.tmp$(EXEEXT) perm.tmp$(EXEEXT) \
	serial.tmp$(EXEEXT) poker.tmp$(EXEEXT) collisions.tmp$(EXEEXT) \
	gap.tmp$(EXEEXT) maxt.tmp$(EXEEXT) sum.tmp$(EXEEXT) \
	coupon.tmp$(EXEEXT) runs.tmp$(EXEEXT) random_walk.tmp$(EXEEXT) \
	wolff.tmp$(EXEEXT) metropolis.tmp$(EXEEXT)
subdir = TESTS/mpitests
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/m4-ax_prog_cxx_mpi.m4 \
	$(top_srcdir)/m4/m4-ax_prog_f77_mpi.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_collisions_tmp_OBJECTS = collisions_tmp-collisions.$(OBJEXT) \
	collisions_tmp-chisquare.$(OBJEXT) \
	collisions_tmp-communicate.$(OBJEXT) \
	collisions_tmp-init_tests.$(OBJEXT) \
	collisions_tmp-util.$(OBJEXT)
collisions_tmp_OBJECTS = $(am_collisions_tmp_OBJECTS)
collisions_tmp_DEPENDENCIES =
collisions_tmp_LINK = $(CXXLD) $(collisions_tmp_CXXFLAGS) $(CXXFLAGS) \
	$(collisions_tmp_LDFLAGS) $(LDFLAGS) -o $@
am_coupon_tmp_OBJECTS = coupon_tmp-coupon.$(OBJEXT) \
	coupon_tmp-chisquare.$(OBJEXT) \
	coupon_tmp-communicate.$(OBJEXT) \
	coupon_tmp-init_tests.$(OBJEXT) coupon_tmp-util.$(OBJEXT) \
	coupon_tmp-stirling.$(OBJEXT)
coupon_tmp_OBJECTS = $(am_coupon_tmp_OBJECTS)
coupon_tmp_DEPENDENCIES =
coupon_tmp_LINK = $(CXXLD) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) \
	$(coupon_tmp_LDFLAGS) $(LDFLAGS) -o $@
am_equidist_tmp_OBJECTS = equidist_tmp-equidist.$(OBJEXT) \
	equidist_tmp-chisquare.$(OBJEXT) \
	equidist_tmp-communicate.$(OBJEXT) \
	equidist_tmp-init_tests.$(OBJEXT) equidist_tmp-util.$(OBJEXT)
equidist_tmp_OBJECTS = $(am_equidist_tmp_OBJECTS)
equidist_tmp_DEPENDENCIES =
equidist_tmp_LINK = $(CXXLD) $(equidist_tmp_CXXFLAGS) $(CXXFLAGS) \
	$(equidist_tmp_LDFLAGS) $(LDFLAGS) -o $@
am_gap_tmp_OBJECTS = gap_tmp-gap.$(OBJEXT) gap_tmp-chisquare.$(OBJEXT) \
	gap_tmp-communicate.$(OBJEXT) gap_tmp-init_tests.$(OBJEXT) \
	gap_tmp-util.$(OBJEXT)
gap_tmp_OBJECTS = $(am_gap_tmp_OBJECTS)
gap_tmp_DEPENDENCIES =
gap_tmp_LINK = $(CXXLD) $(gap_tmp_CXXFLAGS) $(CXXFLAGS) \
	$(gap_tmp_LDFLAGS) $(LDFLAGS) -o $@
am_maxt_tmp_OBJECTS = maxt_tmp-maxt.$(OBJEXT) \
	maxt_tmp-chisquare.$(OBJEXT) maxt_tmp-communicate.$(OBJEXT) \
	maxt_tmp-init_tests.$(OBJEXT) maxt_tmp-util.$(OBJEXT)
maxt_tmp_OBJECTS = $(am_maxt_tmp_OBJECTS)
maxt_tmp_DEPENDENCIES =
maxt_tmp_LINK = $(CXXLD) $(maxt_tmp_CXXFLAGS) $(CXXFLAGS) \
	$(maxt_tmp_LDFLAGS) $(LDFLAGS) -o $@
am_metropolis_tmp_OBJECTS = metropolis_tmp-metropolis.$(OBJEXT) \
	metropolis_tmp-chisquare.$(OBJEXT) \
	metropolis_tmp-communicate.$(OBJEXT) \
	metropolis_tmp-init_tests.$(OBJEXT) \
	metropolis_tmp-util.$(OBJEXT)
metropolis_tmp_OBJECTS = $(am_metropolis_tmp_OBJECTS)
metropolis_tmp_DEPENDENCIES =
metropolis_tmp_LINK = $(CXXLD) $(metropolis_tmp_CXXFLAGS) $(CXXFLAGS) \
	$(metropolis_tmp_LDFLAGS) $(LDFLAGS) -o $@
am_perm_tmp_OBJECTS = perm_tmp-perm.$(OBJEXT) \
	perm_tmp-chisquare.$(OBJEXT) perm_tmp-communicate.$(OBJEXT) \
	perm_tmp-init_tests.$(OBJEXT) perm_tmp-util.$(OBJEXT)
perm_tmp_OBJECTS = $(am_perm_tmp_OBJECTS)
perm_tmp_DEPENDENCIES =
perm_tmp_LINK = $(CXXLD) $(perm_tmp_CXXFLAGS) $(CXXFLAGS) \
	$(perm_tmp_LDFLAGS) $(LDFLAGS) -o $@
am_poker_tmp_OBJECTS = poker_tmp-poker.$(OBJEXT) \
	poker_tmp-chisquare.$(OBJEXT) poker_tmp-communicate.$(OBJEXT) \
	poker_tmp-init_tests.$(OBJEXT) poker_tmp-util.$(OBJEXT) \
	poker_tmp-stirling.$(OBJEXT)
poker_tmp_OBJECTS = $(am_poker_tmp_OBJECTS)
poker_tmp_DEPENDENCIES =
poker_tmp_LINK = $(CXXLD) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) \
	$(poker_tmp_LDFLAGS) $(LDFLAGS) -o $@
am_random_walk_tmp_OBJECTS = random_walk_tmp-random_walk.$(OBJEXT) \
	random_walk_tmp-chisquare.$(OBJEXT) \
	random_walk_tmp-communicate.$(OBJEXT) \
	random_walk_tmp-init_tests.$(OBJEXT) \
	random_walk_tmp-util.$(OBJEXT)
random_walk_tmp_OBJECTS = $(am_random_walk_tmp_OBJECTS)
random_walk_tmp_DEPENDENCIES =
random_walk_tmp_LINK = $(CXXLD) $(random_walk_tmp_CXXFLAGS) \
	$(CXXFLAGS) $(random_walk_tmp_LDFLAGS) $(LDFLAGS) -o $@
am_runs_tmp_OBJECTS = runs_tmp-runs.$(OBJEXT) \
	runs_tmp-chisquare.$(OBJEXT) runs_tmp-communicate.$(OBJEXT) \
	runs_tmp-init_tests.$(OBJEXT) runs_tmp-util.$(OBJEXT)
runs_tmp_OBJECTS = $(am_runs_tmp_OBJECTS)
runs_tmp_DEPENDENCIES =
runs_tmp_LINK = $(CXXLD) $(runs_tmp_CXXFLAGS) $(CXXFLAGS) \
	$(runs_tmp_LDFLAGS) $(LDFLAGS) -o $@
am_serial_tmp_OBJECTS = serial_tmp-serial.$(OBJEXT) \
	serial_tmp-chisquare.$(OBJEXT) \
	serial_tmp-communicate.$(OBJEXT) \
	serial_tmp-init_tests.$(OBJEXT) serial_tmp-util.$(OBJEXT)
serial_tmp_OBJECTS = $(am_serial_tmp_OBJECTS)
serial_tmp_DEPENDENCIES =
serial_tmp_LINK = $(CXXLD) $(serial_tmp_CXXFLAGS) $(CXXFLAGS) \
	$(serial_tmp_LDFLAGS) $(LDFLAGS) -o $@
am_sum_tmp_OBJECTS = sum_tmp-sum.$(OBJEXT) sum_tmp-chisquare.$(OBJEXT) \
	sum_tmp-communicate.$(OBJEXT) sum_tmp-init_tests.$(OBJEXT) \
	sum_tmp-util.$(OBJEXT)
sum_tmp_OBJECTS = $(am_sum_tmp_OBJECTS)
sum_tmp_DEPENDENCIES =
sum_tmp_LINK = $(CXXLD) $(sum_tmp_CXXFLAGS) $(CXXFLAGS) \
	$(sum_tmp_LDFLAGS) $(LDFLAGS) -o $@
am_wolff_tmp_OBJECTS = wolff_tmp-wolff.$(OBJEXT) \
	wolff_tmp-chisquare.$(OBJEXT) wolff_tmp-communicate.$(OBJEXT) \
	wolff_tmp-init_tests.$(OBJEXT) wolff_tmp-util.$(OBJEXT)
wolff_tmp_OBJECTS = $(am_wolff_tmp_OBJECTS)
wolff_tmp_DEPENDENCIES =
wolff_tmp_LINK = $(CXXLD) $(wolff_tmp_CXXFLAGS) $(CXXFLAGS) \
	$(wolff_tmp_LDFLAGS) $(LDFLAGS) -o $@
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(bin_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(collisions_tmp_SOURCES) $(coupon_tmp_SOURCES) \
	$(equidist_tmp_SOURCES) $(gap_tmp_SOURCES) $(maxt_tmp_SOURCES) \
	$(metropolis_tmp_SOURCES) $(perm_tmp_SOURCES) \
	$(poker_tmp_SOURCES) $(random_walk_tmp_SOURCES) \
	$(runs_tmp_SOURCES) $(serial_tmp_SOURCES) $(sum_tmp_SOURCES) \
	$(wolff_tmp_SOURCES)
DIST_SOURCES = $(collisions_tmp_SOURCES) $(coupon_tmp_SOURCES) \
	$(equidist_tmp_SOURCES) $(gap_tmp_SOURCES) $(maxt_tmp_SOURCES) \
	$(metropolis_tmp_SOURCES) $(perm_tmp_SOURCES) \
	$(poker_tmp_SOURCES) $(random_walk_tmp_SOURCES) \
	$(runs_tmp_SOURCES) $(serial_tmp_SOURCES) $(sum_tmp_SOURCES) \
	$(wolff_tmp_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.14
AWK = gawk
BASH = /bin/bash
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -Wno-deprecated -DLONG64=long
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = gfortran
FFLAGS = -g -O2
FFPSIZE = -DPOINTER_SIZE=8 -DLONG64=long -DINTEGER_STAR_8
FLIBS =  -L/usr/lib/gcc/x86_64-linux-gnu/4.8 -L/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/4.8/../../.. -lgfortran -lm -lquadmath
FMANGLE = 
FORTRANDIR = F77
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lm 
LTLIBOBJS = 
MAKEINFO = makeinfo
MKDIR_P = /bin/mkdir -p
MPICXX = 
MPIF77 = 
MPI_DEF = 
OBJEXT = o
PACKAGE = sprng
PACKAGE_BUGREPORT = 
PACKAGE_NAME = sprng
PACKAGE_STRING = sprng 5
PACKAGE_TARNAME = sprng
PACKAGE_URL = 
PACKAGE_VERSION = 5
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
TESTU01_INCDIR = 
TESTU01_LIBDIR = 
VERSION = 5
abs_builddir = /home/kvantti/aalto/quantum_solver_collection/ext/sprng5/TESTS/mpitests
abs_srcdir = /home/kvantti/aalto/quantum_solver_collection/ext/sprng5/TESTS/mpitests
abs_top_builddir = /home/kvantti/aalto/quantum_solver_collection/ext/sprng5
abs_top_srcdir = /home/kvantti/aalto/quantum_solver_collection/ext/sprng5
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = gfortran
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/kvantti/aalto/quantum_solver_collection/ext/sprng5/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/kvantti/aalto/quantum_solver_collection/ext/sprng5
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sprng_cxxflags = 
sprng_fflags = 
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
SUBDIRS = .
LIBDIR = ../../lib
SRCDIR = ../../SRC
INCLUDEDIR = ../../include
EXTRA_DIST = fft.cpp
GEN = sprng
CLEANFILES = *.$(GEN)
equidist_tmp_SOURCES = equidist.cpp chisquare.cpp communicate.cpp init_tests.cpp util.h util.cpp tests.h $(SRCDIR)/sprng_cpp.h
equidist_tmp_CXXFLAGS = -I$(INCLUDEDIR) -DSPRNG_MPI 
equidist_tmp_LDADD = -L$(LIBDIR) -l$(GEN) -lm 
equidist_tmp_LDFLAGS = 
perm_tmp_SOURCES = perm.cpp chisquare.cpp communicate.cpp init_tests.cpp util.h util.cpp tests.h $(SRCDIR)/sprng_cpp.h
perm_tmp_CXXFLAGS = -I$(INCLUDEDIR) -DSPRNG_MPI 
perm_tmp_LDADD = -L$(LIBDIR) -l$(GEN) -lm
perm_tmp_LDFLAGS = 
serial_tmp_SOURCES = serial.cpp chisquare.cpp communicate.cpp init_tests.cpp util.h util.cpp tests.h $(SRCDIR)/sprng_cpp.h
serial_tmp_CXXFLAGS = -I$(INCLUDEDIR) -DSPRNG_MPI 
serial_tmp_LDADD = -L$(LIBDIR) -l$(GEN) -lm 
serial_tmp_LDFLAGS = 
poker_tmp_SOURCES = poker.cpp chisquare.cpp communicate.cpp init_tests.cpp util.h util.cpp tests.h stirling.cpp $(SRCDIR)/sprng_cpp.h
poker_tmp_CXXFLAGS = -I$(INCLUDEDIR) -DSPRNG_MPI 
poker_tmp_LDADD = -L$(LIBDIR) -l$(GEN) -lm 
poker_tmp_LDFLAGS = 
collisions_tmp_SOURCES = collisions.cpp chisquare.cpp communicate.cpp init_tests.cpp util.h util.cpp tests.h $(SRCDIR)/sprng_cpp.h
collisions_tmp_CXXFLAGS = -I$(INCLUDEDIR) -DSPRNG_MPI 
collisions_tmp_LDADD = -L$(LIBDIR) -l$(GEN) -lm
collisions_tmp_LDFLAGS = 
gap_tmp_SOURCES = gap.cpp chisquare.cpp communicate.cpp init_tests.cpp util.h util.cpp tests.h $(SRCDIR)/sprng_cpp.h
gap_tmp_CXXFLAGS = -I$(INCLUDEDIR) -DSPRNG_MPI 
gap_tmp_LDADD = -L$(LIBDIR) -l$(GEN) -lm 
gap_tmp_LDFLAGS = 
maxt_tmp_SOURCES = maxt.cpp chisquare.cpp communicate.cpp init_tests.cpp util.h util.cpp tests.h $(SRCDIR)/sprng_cpp.h
maxt_tmp_CXXFLAGS = -I$(INCLUDEDIR) -DSPRNG_MPI 
maxt_tmp_LDADD = -L$(LIBDIR) -l$(GEN) -lm 
maxt_tmp_LDFLAGS = 
sum_tmp_SOURCES = sum.cpp chisquare.cpp communicate.cpp init_tests.cpp util.h util.cpp tests.h $(SRCDIR)/sprng_cpp.h
sum_tmp_CXXFLAGS = -I$(INCLUDEDIR) -DSPRNG_MPI 
sum_tmp_LDADD = -L$(LIBDIR) -l$(GEN) -lm
sum_tmp_LDFLAGS = 
coupon_tmp_SOURCES = coupon.cpp chisquare.cpp communicate.cpp init_tests.cpp util.h util.cpp tests.h stirling.cpp $(SRCDIR)/sprng_cpp.h
coupon_tmp_CXXFLAGS = -I$(INCLUDEDIR) -DSPRNG_MPI 
coupon_tmp_LDADD = -L$(LIBDIR) -l$(GEN) -lm 
coupon_tmp_LDFLAGS = 
runs_tmp_SOURCES = runs.cpp chisquare.cpp communicate.cpp init_tests.cpp util.h util.cpp tests.h $(SRCDIR)/sprng_cpp.h
runs_tmp_CXXFLAGS = -I$(INCLUDEDIR) -DSPRNG_MPI 
runs_tmp_LDADD = -L$(LIBDIR) -l$(GEN) -lm 
runs_tmp_LDFLAGS = 
random_walk_tmp_SOURCES = random_walk.cpp chisquare.cpp communicate.cpp init_tests.cpp util.h util.cpp tests.h $(SRCDIR)/sprng_cpp.h
random_walk_tmp_CXXFLAGS = -I$(INCLUDEDIR) -DSPRNG_MPI 
random_walk_tmp_LDADD = -L$(LIBDIR) -l$(GEN) -lm 
random_walk_tmp_LDFLAGS = 
wolff_tmp_SOURCES = wolff.cpp chisquare.cpp communicate.cpp init_tests.cpp util.h util.cpp tests.h $(SRCDIR)/sprng_cpp.h
wolff_tmp_CXXFLAGS = -I$(INCLUDEDIR) -DSPRNG_MPI 
wolff_tmp_LDADD = -L$(LIBDIR) -l$(GEN) -lm 
wolff_tmp_LDFLAGS = 
metropolis_tmp_SOURCES = metropolis.cpp chisquare.cpp communicate.cpp init_tests.cpp util.h util.cpp tests.h $(SRCDIR)/sprng_cpp.h
metropolis_tmp_CXXFLAGS = -I$(INCLUDEDIR) -DSPRNG_MPI 
metropolis_tmp_LDADD = -L$(LIBDIR) -l$(GEN) -lm 
metropolis_tmp_LDFLAGS = 
bin_SCRIPTS = sprngtest
all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu TESTS/mpitests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu TESTS/mpitests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

collisions.tmp$(EXEEXT): $(collisions_tmp_OBJECTS) $(collisions_tmp_DEPENDENCIES) $(EXTRA_collisions_tmp_DEPENDENCIES) 
	@rm -f collisions.tmp$(EXEEXT)
	$(AM_V_CXXLD)$(collisions_tmp_LINK) $(collisions_tmp_OBJECTS) $(collisions_tmp_LDADD) $(LIBS)

coupon.tmp$(EXEEXT): $(coupon_tmp_OBJECTS) $(coupon_tmp_DEPENDENCIES) $(EXTRA_coupon_tmp_DEPENDENCIES) 
	@rm -f coupon.tmp$(EXEEXT)
	$(AM_V_CXXLD)$(coupon_tmp_LINK) $(coupon_tmp_OBJECTS) $(coupon_tmp_LDADD) $(LIBS)

equidist.tmp$(EXEEXT): $(equidist_tmp_OBJECTS) $(equidist_tmp_DEPENDENCIES) $(EXTRA_equidist_tmp_DEPENDENCIES) 
	@rm -f equidist.tmp$(EXEEXT)
	$(AM_V_CXXLD)$(equidist_tmp_LINK) $(equidist_tmp_OBJECTS) $(equidist_tmp_LDADD) $(LIBS)

gap.tmp$(EXEEXT): $(gap_tmp_OBJECTS) $(gap_tmp_DEPENDENCIES) $(EXTRA_gap_tmp_DEPENDENCIES) 
	@rm -f gap.tmp$(EXEEXT)
	$(AM_V_CXXLD)$(gap_tmp_LINK) $(gap_tmp_OBJECTS) $(gap_tmp_LDADD) $(LIBS)

maxt.tmp$(EXEEXT): $(maxt_tmp_OBJECTS) $(maxt_tmp_DEPENDENCIES) $(EXTRA_maxt_tmp_DEPENDENCIES) 
	@rm -f maxt.tmp$(EXEEXT)
	$(AM_V_CXXLD)$(maxt_tmp_LINK) $(maxt_tmp_OBJECTS) $(maxt_tmp_LDADD) $(LIBS)

metropolis.tmp$(EXEEXT): $(metropolis_tmp_OBJECTS) $(metropolis_tmp_DEPENDENCIES) $(EXTRA_metropolis_tmp_DEPENDENCIES) 
	@rm -f metropolis.tmp$(EXEEXT)
	$(AM_V_CXXLD)$(metropolis_tmp_LINK) $(metropolis_tmp_OBJECTS) $(metropolis_tmp_LDADD) $(LIBS)

perm.tmp$(EXEEXT): $(perm_tmp_OBJECTS) $(perm_tmp_DEPENDENCIES) $(EXTRA_perm_tmp_DEPENDENCIES) 
	@rm -f perm.tmp$(EXEEXT)
	$(AM_V_CXXLD)$(perm_tmp_LINK) $(perm_tmp_OBJECTS) $(perm_tmp_LDADD) $(LIBS)

poker.tmp$(EXEEXT): $(poker_tmp_OBJECTS) $(poker_tmp_DEPENDENCIES) $(EXTRA_poker_tmp_DEPENDENCIES) 
	@rm -f poker.tmp$(EXEEXT)
	$(AM_V_CXXLD)$(poker_tmp_LINK) $(poker_tmp_OBJECTS) $(poker_tmp_LDADD) $(LIBS)

random_walk.tmp$(EXEEXT): $(random_walk_tmp_OBJECTS) $(random_walk_tmp_DEPENDENCIES) $(EXTRA_random_walk_tmp_DEPENDENCIES) 
	@rm -f random_walk.tmp$(EXEEXT)
	$(AM_V_CXXLD)$(random_walk_tmp_LINK) $(random_walk_tmp_OBJECTS) $(random_walk_tmp_LDADD) $(LIBS)

runs.tmp$(EXEEXT): $(runs_tmp_OBJECTS) $(runs_tmp_DEPENDENCIES) $(EXTRA_runs_tmp_DEPENDENCIES) 
	@rm -f runs.tmp$(EXEEXT)
	$(AM_V_CXXLD)$(runs_tmp_LINK) $(runs_tmp_OBJECTS) $(runs_tmp_LDADD) $(LIBS)

serial.tmp$(EXEEXT): $(serial_tmp_OBJECTS) $(serial_tmp_DEPENDENCIES) $(EXTRA_serial_tmp_DEPENDENCIES) 
	@rm -f serial.tmp$(EXEEXT)
	$(AM_V_CXXLD)$(serial_tmp_LINK) $(serial_tmp_OBJECTS) $(serial_tmp_LDADD) $(LIBS)

sum.tmp$(EXEEXT): $(sum_tmp_OBJECTS) $(sum_tmp_DEPENDENCIES) $(EXTRA_sum_tmp_DEPENDENCIES) 
	@rm -f sum.tmp$(EXEEXT)
	$(AM_V_CXXLD)$(sum_tmp_LINK) $(sum_tmp_OBJECTS) $(sum_tmp_LDADD) $(LIBS)

wolff.tmp$(EXEEXT): $(wolff_tmp_OBJECTS) $(wolff_tmp_DEPENDENCIES) $(EXTRA_wolff_tmp_DEPENDENCIES) 
	@rm -f wolff.tmp$(EXEEXT)
	$(AM_V_CXXLD)$(wolff_tmp_LINK) $(wolff_tmp_OBJECTS) $(wolff_tmp_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/collisions_tmp-chisquare.Po
include ./$(DEPDIR)/collisions_tmp-collisions.Po
include ./$(DEPDIR)/collisions_tmp-communicate.Po
include ./$(DEPDIR)/collisions_tmp-init_tests.Po
include ./$(DEPDIR)/collisions_tmp-util.Po
include ./$(DEPDIR)/coupon_tmp-chisquare.Po
include ./$(DEPDIR)/coupon_tmp-communicate.Po
include ./$(DEPDIR)/coupon_tmp-coupon.Po
include ./$(DEPDIR)/coupon_tmp-init_tests.Po
include ./$(DEPDIR)/coupon_tmp-stirling.Po
include ./$(DEPDIR)/coupon_tmp-util.Po
include ./$(DEPDIR)/equidist_tmp-chisquare.Po
include ./$(DEPDIR)/equidist_tmp-communicate.Po
include ./$(DEPDIR)/equidist_tmp-equidist.Po
include ./$(DEPDIR)/equidist_tmp-init_tests.Po
include ./$(DEPDIR)/equidist_tmp-util.Po
include ./$(DEPDIR)/gap_tmp-chisquare.Po
include ./$(DEPDIR)/gap_tmp-communicate.Po
include ./$(DEPDIR)/gap_tmp-gap.Po
include ./$(DEPDIR)/gap_tmp-init_tests.Po
include ./$(DEPDIR)/gap_tmp-util.Po
include ./$(DEPDIR)/maxt_tmp-chisquare.Po
include ./$(DEPDIR)/maxt_tmp-communicate.Po
include ./$(DEPDIR)/maxt_tmp-init_tests.Po
include ./$(DEPDIR)/maxt_tmp-maxt.Po
include ./$(DEPDIR)/maxt_tmp-util.Po
include ./$(DEPDIR)/metropolis_tmp-chisquare.Po
include ./$(DEPDIR)/metropolis_tmp-communicate.Po
include ./$(DEPDIR)/metropolis_tmp-init_tests.Po
include ./$(DEPDIR)/metropolis_tmp-metropolis.Po
include ./$(DEPDIR)/metropolis_tmp-util.Po
include ./$(DEPDIR)/perm_tmp-chisquare.Po
include ./$(DEPDIR)/perm_tmp-communicate.Po
include ./$(DEPDIR)/perm_tmp-init_tests.Po
include ./$(DEPDIR)/perm_tmp-perm.Po
include ./$(DEPDIR)/perm_tmp-util.Po
include ./$(DEPDIR)/poker_tmp-chisquare.Po
include ./$(DEPDIR)/poker_tmp-communicate.Po
include ./$(DEPDIR)/poker_tmp-init_tests.Po
include ./$(DEPDIR)/poker_tmp-poker.Po
include ./$(DEPDIR)/poker_tmp-stirling.Po
include ./$(DEPDIR)/poker_tmp-util.Po
include ./$(DEPDIR)/random_walk_tmp-chisquare.Po
include ./$(DEPDIR)/random_walk_tmp-communicate.Po
include ./$(DEPDIR)/random_walk_tmp-init_tests.Po
include ./$(DEPDIR)/random_walk_tmp-random_walk.Po
include ./$(DEPDIR)/random_walk_tmp-util.Po
include ./$(DEPDIR)/runs_tmp-chisquare.Po
include ./$(DEPDIR)/runs_tmp-communicate.Po
include ./$(DEPDIR)/runs_tmp-init_tests.Po
include ./$(DEPDIR)/runs_tmp-runs.Po
include ./$(DEPDIR)/runs_tmp-util.Po
include ./$(DEPDIR)/serial_tmp-chisquare.Po
include ./$(DEPDIR)/serial_tmp-communicate.Po
include ./$(DEPDIR)/serial_tmp-init_tests.Po
include ./$(DEPDIR)/serial_tmp-serial.Po
include ./$(DEPDIR)/serial_tmp-util.Po
include ./$(DEPDIR)/sum_tmp-chisquare.Po
include ./$(DEPDIR)/sum_tmp-communicate.Po
include ./$(DEPDIR)/sum_tmp-init_tests.Po
include ./$(DEPDIR)/sum_tmp-sum.Po
include ./$(DEPDIR)/sum_tmp-util.Po
include ./$(DEPDIR)/wolff_tmp-chisquare.Po
include ./$(DEPDIR)/wolff_tmp-communicate.Po
include ./$(DEPDIR)/wolff_tmp-init_tests.Po
include ./$(DEPDIR)/wolff_tmp-util.Po
include ./$(DEPDIR)/wolff_tmp-wolff.Po

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

collisions_tmp-collisions.o: collisions.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(collisions_tmp_CXXFLAGS) $(CXXFLAGS) -MT collisions_tmp-collisions.o -MD -MP -MF $(DEPDIR)/collisions_tmp-collisions.Tpo -c -o collisions_tmp-collisions.o `test -f 'collisions.cpp' || echo '$(srcdir)/'`collisions.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/collisions_tmp-collisions.Tpo $(DEPDIR)/collisions_tmp-collisions.Po
#	$(AM_V_CXX)source='collisions.cpp' object='collisions_tmp-collisions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(collisions_tmp_CXXFLAGS) $(CXXFLAGS) -c -o collisions_tmp-collisions.o `test -f 'collisions.cpp' || echo '$(srcdir)/'`collisions.cpp

collisions_tmp-collisions.obj: collisions.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(collisions_tmp_CXXFLAGS) $(CXXFLAGS) -MT collisions_tmp-collisions.obj -MD -MP -MF $(DEPDIR)/collisions_tmp-collisions.Tpo -c -o collisions_tmp-collisions.obj `if test -f 'collisions.cpp'; then $(CYGPATH_W) 'collisions.cpp'; else $(CYGPATH_W) '$(srcdir)/collisions.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/collisions_tmp-collisions.Tpo $(DEPDIR)/collisions_tmp-collisions.Po
#	$(AM_V_CXX)source='collisions.cpp' object='collisions_tmp-collisions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(collisions_tmp_CXXFLAGS) $(CXXFLAGS) -c -o collisions_tmp-collisions.obj `if test -f 'collisions.cpp'; then $(CYGPATH_W) 'collisions.cpp'; else $(CYGPATH_W) '$(srcdir)/collisions.cpp'; fi`

collisions_tmp-chisquare.o: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(collisions_tmp_CXXFLAGS) $(CXXFLAGS) -MT collisions_tmp-chisquare.o -MD -MP -MF $(DEPDIR)/collisions_tmp-chisquare.Tpo -c -o collisions_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/collisions_tmp-chisquare.Tpo $(DEPDIR)/collisions_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='collisions_tmp-chisquare.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(collisions_tmp_CXXFLAGS) $(CXXFLAGS) -c -o collisions_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp

collisions_tmp-chisquare.obj: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(collisions_tmp_CXXFLAGS) $(CXXFLAGS) -MT collisions_tmp-chisquare.obj -MD -MP -MF $(DEPDIR)/collisions_tmp-chisquare.Tpo -c -o collisions_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/collisions_tmp-chisquare.Tpo $(DEPDIR)/collisions_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='collisions_tmp-chisquare.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(collisions_tmp_CXXFLAGS) $(CXXFLAGS) -c -o collisions_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`

collisions_tmp-communicate.o: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(collisions_tmp_CXXFLAGS) $(CXXFLAGS) -MT collisions_tmp-communicate.o -MD -MP -MF $(DEPDIR)/collisions_tmp-communicate.Tpo -c -o collisions_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/collisions_tmp-communicate.Tpo $(DEPDIR)/collisions_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='collisions_tmp-communicate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(collisions_tmp_CXXFLAGS) $(CXXFLAGS) -c -o collisions_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp

collisions_tmp-communicate.obj: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(collisions_tmp_CXXFLAGS) $(CXXFLAGS) -MT collisions_tmp-communicate.obj -MD -MP -MF $(DEPDIR)/collisions_tmp-communicate.Tpo -c -o collisions_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/collisions_tmp-communicate.Tpo $(DEPDIR)/collisions_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='collisions_tmp-communicate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(collisions_tmp_CXXFLAGS) $(CXXFLAGS) -c -o collisions_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`

collisions_tmp-init_tests.o: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(collisions_tmp_CXXFLAGS) $(CXXFLAGS) -MT collisions_tmp-init_tests.o -MD -MP -MF $(DEPDIR)/collisions_tmp-init_tests.Tpo -c -o collisions_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/collisions_tmp-init_tests.Tpo $(DEPDIR)/collisions_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='collisions_tmp-init_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(collisions_tmp_CXXFLAGS) $(CXXFLAGS) -c -o collisions_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp

collisions_tmp-init_tests.obj: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(collisions_tmp_CXXFLAGS) $(CXXFLAGS) -MT collisions_tmp-init_tests.obj -MD -MP -MF $(DEPDIR)/collisions_tmp-init_tests.Tpo -c -o collisions_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/collisions_tmp-init_tests.Tpo $(DEPDIR)/collisions_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='collisions_tmp-init_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(collisions_tmp_CXXFLAGS) $(CXXFLAGS) -c -o collisions_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`

collisions_tmp-util.o: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(collisions_tmp_CXXFLAGS) $(CXXFLAGS) -MT collisions_tmp-util.o -MD -MP -MF $(DEPDIR)/collisions_tmp-util.Tpo -c -o collisions_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/collisions_tmp-util.Tpo $(DEPDIR)/collisions_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='collisions_tmp-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(collisions_tmp_CXXFLAGS) $(CXXFLAGS) -c -o collisions_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp

collisions_tmp-util.obj: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(collisions_tmp_CXXFLAGS) $(CXXFLAGS) -MT collisions_tmp-util.obj -MD -MP -MF $(DEPDIR)/collisions_tmp-util.Tpo -c -o collisions_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/collisions_tmp-util.Tpo $(DEPDIR)/collisions_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='collisions_tmp-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(collisions_tmp_CXXFLAGS) $(CXXFLAGS) -c -o collisions_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`

coupon_tmp-coupon.o: coupon.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -MT coupon_tmp-coupon.o -MD -MP -MF $(DEPDIR)/coupon_tmp-coupon.Tpo -c -o coupon_tmp-coupon.o `test -f 'coupon.cpp' || echo '$(srcdir)/'`coupon.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/coupon_tmp-coupon.Tpo $(DEPDIR)/coupon_tmp-coupon.Po
#	$(AM_V_CXX)source='coupon.cpp' object='coupon_tmp-coupon.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -c -o coupon_tmp-coupon.o `test -f 'coupon.cpp' || echo '$(srcdir)/'`coupon.cpp

coupon_tmp-coupon.obj: coupon.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -MT coupon_tmp-coupon.obj -MD -MP -MF $(DEPDIR)/coupon_tmp-coupon.Tpo -c -o coupon_tmp-coupon.obj `if test -f 'coupon.cpp'; then $(CYGPATH_W) 'coupon.cpp'; else $(CYGPATH_W) '$(srcdir)/coupon.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coupon_tmp-coupon.Tpo $(DEPDIR)/coupon_tmp-coupon.Po
#	$(AM_V_CXX)source='coupon.cpp' object='coupon_tmp-coupon.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -c -o coupon_tmp-coupon.obj `if test -f 'coupon.cpp'; then $(CYGPATH_W) 'coupon.cpp'; else $(CYGPATH_W) '$(srcdir)/coupon.cpp'; fi`

coupon_tmp-chisquare.o: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -MT coupon_tmp-chisquare.o -MD -MP -MF $(DEPDIR)/coupon_tmp-chisquare.Tpo -c -o coupon_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/coupon_tmp-chisquare.Tpo $(DEPDIR)/coupon_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='coupon_tmp-chisquare.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -c -o coupon_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp

coupon_tmp-chisquare.obj: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -MT coupon_tmp-chisquare.obj -MD -MP -MF $(DEPDIR)/coupon_tmp-chisquare.Tpo -c -o coupon_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coupon_tmp-chisquare.Tpo $(DEPDIR)/coupon_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='coupon_tmp-chisquare.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -c -o coupon_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`

coupon_tmp-communicate.o: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -MT coupon_tmp-communicate.o -MD -MP -MF $(DEPDIR)/coupon_tmp-communicate.Tpo -c -o coupon_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/coupon_tmp-communicate.Tpo $(DEPDIR)/coupon_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='coupon_tmp-communicate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -c -o coupon_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp

coupon_tmp-communicate.obj: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -MT coupon_tmp-communicate.obj -MD -MP -MF $(DEPDIR)/coupon_tmp-communicate.Tpo -c -o coupon_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coupon_tmp-communicate.Tpo $(DEPDIR)/coupon_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='coupon_tmp-communicate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -c -o coupon_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`

coupon_tmp-init_tests.o: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -MT coupon_tmp-init_tests.o -MD -MP -MF $(DEPDIR)/coupon_tmp-init_tests.Tpo -c -o coupon_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/coupon_tmp-init_tests.Tpo $(DEPDIR)/coupon_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='coupon_tmp-init_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -c -o coupon_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp

coupon_tmp-init_tests.obj: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -MT coupon_tmp-init_tests.obj -MD -MP -MF $(DEPDIR)/coupon_tmp-init_tests.Tpo -c -o coupon_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coupon_tmp-init_tests.Tpo $(DEPDIR)/coupon_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='coupon_tmp-init_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -c -o coupon_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`

coupon_tmp-util.o: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -MT coupon_tmp-util.o -MD -MP -MF $(DEPDIR)/coupon_tmp-util.Tpo -c -o coupon_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/coupon_tmp-util.Tpo $(DEPDIR)/coupon_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='coupon_tmp-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -c -o coupon_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp

coupon_tmp-util.obj: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -MT coupon_tmp-util.obj -MD -MP -MF $(DEPDIR)/coupon_tmp-util.Tpo -c -o coupon_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coupon_tmp-util.Tpo $(DEPDIR)/coupon_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='coupon_tmp-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -c -o coupon_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`

coupon_tmp-stirling.o: stirling.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -MT coupon_tmp-stirling.o -MD -MP -MF $(DEPDIR)/coupon_tmp-stirling.Tpo -c -o coupon_tmp-stirling.o `test -f 'stirling.cpp' || echo '$(srcdir)/'`stirling.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/coupon_tmp-stirling.Tpo $(DEPDIR)/coupon_tmp-stirling.Po
#	$(AM_V_CXX)source='stirling.cpp' object='coupon_tmp-stirling.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -c -o coupon_tmp-stirling.o `test -f 'stirling.cpp' || echo '$(srcdir)/'`stirling.cpp

coupon_tmp-stirling.obj: stirling.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -MT coupon_tmp-stirling.obj -MD -MP -MF $(DEPDIR)/coupon_tmp-stirling.Tpo -c -o coupon_tmp-stirling.obj `if test -f 'stirling.cpp'; then $(CYGPATH_W) 'stirling.cpp'; else $(CYGPATH_W) '$(srcdir)/stirling.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coupon_tmp-stirling.Tpo $(DEPDIR)/coupon_tmp-stirling.Po
#	$(AM_V_CXX)source='stirling.cpp' object='coupon_tmp-stirling.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(coupon_tmp_CXXFLAGS) $(CXXFLAGS) -c -o coupon_tmp-stirling.obj `if test -f 'stirling.cpp'; then $(CYGPATH_W) 'stirling.cpp'; else $(CYGPATH_W) '$(srcdir)/stirling.cpp'; fi`

equidist_tmp-equidist.o: equidist.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(equidist_tmp_CXXFLAGS) $(CXXFLAGS) -MT equidist_tmp-equidist.o -MD -MP -MF $(DEPDIR)/equidist_tmp-equidist.Tpo -c -o equidist_tmp-equidist.o `test -f 'equidist.cpp' || echo '$(srcdir)/'`equidist.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/equidist_tmp-equidist.Tpo $(DEPDIR)/equidist_tmp-equidist.Po
#	$(AM_V_CXX)source='equidist.cpp' object='equidist_tmp-equidist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(equidist_tmp_CXXFLAGS) $(CXXFLAGS) -c -o equidist_tmp-equidist.o `test -f 'equidist.cpp' || echo '$(srcdir)/'`equidist.cpp

equidist_tmp-equidist.obj: equidist.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(equidist_tmp_CXXFLAGS) $(CXXFLAGS) -MT equidist_tmp-equidist.obj -MD -MP -MF $(DEPDIR)/equidist_tmp-equidist.Tpo -c -o equidist_tmp-equidist.obj `if test -f 'equidist.cpp'; then $(CYGPATH_W) 'equidist.cpp'; else $(CYGPATH_W) '$(srcdir)/equidist.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/equidist_tmp-equidist.Tpo $(DEPDIR)/equidist_tmp-equidist.Po
#	$(AM_V_CXX)source='equidist.cpp' object='equidist_tmp-equidist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(equidist_tmp_CXXFLAGS) $(CXXFLAGS) -c -o equidist_tmp-equidist.obj `if test -f 'equidist.cpp'; then $(CYGPATH_W) 'equidist.cpp'; else $(CYGPATH_W) '$(srcdir)/equidist.cpp'; fi`

equidist_tmp-chisquare.o: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(equidist_tmp_CXXFLAGS) $(CXXFLAGS) -MT equidist_tmp-chisquare.o -MD -MP -MF $(DEPDIR)/equidist_tmp-chisquare.Tpo -c -o equidist_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/equidist_tmp-chisquare.Tpo $(DEPDIR)/equidist_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='equidist_tmp-chisquare.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(equidist_tmp_CXXFLAGS) $(CXXFLAGS) -c -o equidist_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp

equidist_tmp-chisquare.obj: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(equidist_tmp_CXXFLAGS) $(CXXFLAGS) -MT equidist_tmp-chisquare.obj -MD -MP -MF $(DEPDIR)/equidist_tmp-chisquare.Tpo -c -o equidist_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/equidist_tmp-chisquare.Tpo $(DEPDIR)/equidist_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='equidist_tmp-chisquare.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(equidist_tmp_CXXFLAGS) $(CXXFLAGS) -c -o equidist_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`

equidist_tmp-communicate.o: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(equidist_tmp_CXXFLAGS) $(CXXFLAGS) -MT equidist_tmp-communicate.o -MD -MP -MF $(DEPDIR)/equidist_tmp-communicate.Tpo -c -o equidist_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/equidist_tmp-communicate.Tpo $(DEPDIR)/equidist_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='equidist_tmp-communicate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(equidist_tmp_CXXFLAGS) $(CXXFLAGS) -c -o equidist_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp

equidist_tmp-communicate.obj: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(equidist_tmp_CXXFLAGS) $(CXXFLAGS) -MT equidist_tmp-communicate.obj -MD -MP -MF $(DEPDIR)/equidist_tmp-communicate.Tpo -c -o equidist_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/equidist_tmp-communicate.Tpo $(DEPDIR)/equidist_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='equidist_tmp-communicate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(equidist_tmp_CXXFLAGS) $(CXXFLAGS) -c -o equidist_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`

equidist_tmp-init_tests.o: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(equidist_tmp_CXXFLAGS) $(CXXFLAGS) -MT equidist_tmp-init_tests.o -MD -MP -MF $(DEPDIR)/equidist_tmp-init_tests.Tpo -c -o equidist_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/equidist_tmp-init_tests.Tpo $(DEPDIR)/equidist_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='equidist_tmp-init_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(equidist_tmp_CXXFLAGS) $(CXXFLAGS) -c -o equidist_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp

equidist_tmp-init_tests.obj: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(equidist_tmp_CXXFLAGS) $(CXXFLAGS) -MT equidist_tmp-init_tests.obj -MD -MP -MF $(DEPDIR)/equidist_tmp-init_tests.Tpo -c -o equidist_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/equidist_tmp-init_tests.Tpo $(DEPDIR)/equidist_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='equidist_tmp-init_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(equidist_tmp_CXXFLAGS) $(CXXFLAGS) -c -o equidist_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`

equidist_tmp-util.o: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(equidist_tmp_CXXFLAGS) $(CXXFLAGS) -MT equidist_tmp-util.o -MD -MP -MF $(DEPDIR)/equidist_tmp-util.Tpo -c -o equidist_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/equidist_tmp-util.Tpo $(DEPDIR)/equidist_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='equidist_tmp-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(equidist_tmp_CXXFLAGS) $(CXXFLAGS) -c -o equidist_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp

equidist_tmp-util.obj: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(equidist_tmp_CXXFLAGS) $(CXXFLAGS) -MT equidist_tmp-util.obj -MD -MP -MF $(DEPDIR)/equidist_tmp-util.Tpo -c -o equidist_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/equidist_tmp-util.Tpo $(DEPDIR)/equidist_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='equidist_tmp-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(equidist_tmp_CXXFLAGS) $(CXXFLAGS) -c -o equidist_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`

gap_tmp-gap.o: gap.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gap_tmp_CXXFLAGS) $(CXXFLAGS) -MT gap_tmp-gap.o -MD -MP -MF $(DEPDIR)/gap_tmp-gap.Tpo -c -o gap_tmp-gap.o `test -f 'gap.cpp' || echo '$(srcdir)/'`gap.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/gap_tmp-gap.Tpo $(DEPDIR)/gap_tmp-gap.Po
#	$(AM_V_CXX)source='gap.cpp' object='gap_tmp-gap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gap_tmp_CXXFLAGS) $(CXXFLAGS) -c -o gap_tmp-gap.o `test -f 'gap.cpp' || echo '$(srcdir)/'`gap.cpp

gap_tmp-gap.obj: gap.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gap_tmp_CXXFLAGS) $(CXXFLAGS) -MT gap_tmp-gap.obj -MD -MP -MF $(DEPDIR)/gap_tmp-gap.Tpo -c -o gap_tmp-gap.obj `if test -f 'gap.cpp'; then $(CYGPATH_W) 'gap.cpp'; else $(CYGPATH_W) '$(srcdir)/gap.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gap_tmp-gap.Tpo $(DEPDIR)/gap_tmp-gap.Po
#	$(AM_V_CXX)source='gap.cpp' object='gap_tmp-gap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gap_tmp_CXXFLAGS) $(CXXFLAGS) -c -o gap_tmp-gap.obj `if test -f 'gap.cpp'; then $(CYGPATH_W) 'gap.cpp'; else $(CYGPATH_W) '$(srcdir)/gap.cpp'; fi`

gap_tmp-chisquare.o: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gap_tmp_CXXFLAGS) $(CXXFLAGS) -MT gap_tmp-chisquare.o -MD -MP -MF $(DEPDIR)/gap_tmp-chisquare.Tpo -c -o gap_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/gap_tmp-chisquare.Tpo $(DEPDIR)/gap_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='gap_tmp-chisquare.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gap_tmp_CXXFLAGS) $(CXXFLAGS) -c -o gap_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp

gap_tmp-chisquare.obj: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gap_tmp_CXXFLAGS) $(CXXFLAGS) -MT gap_tmp-chisquare.obj -MD -MP -MF $(DEPDIR)/gap_tmp-chisquare.Tpo -c -o gap_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gap_tmp-chisquare.Tpo $(DEPDIR)/gap_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='gap_tmp-chisquare.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gap_tmp_CXXFLAGS) $(CXXFLAGS) -c -o gap_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`

gap_tmp-communicate.o: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gap_tmp_CXXFLAGS) $(CXXFLAGS) -MT gap_tmp-communicate.o -MD -MP -MF $(DEPDIR)/gap_tmp-communicate.Tpo -c -o gap_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/gap_tmp-communicate.Tpo $(DEPDIR)/gap_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='gap_tmp-communicate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gap_tmp_CXXFLAGS) $(CXXFLAGS) -c -o gap_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp

gap_tmp-communicate.obj: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gap_tmp_CXXFLAGS) $(CXXFLAGS) -MT gap_tmp-communicate.obj -MD -MP -MF $(DEPDIR)/gap_tmp-communicate.Tpo -c -o gap_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gap_tmp-communicate.Tpo $(DEPDIR)/gap_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='gap_tmp-communicate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gap_tmp_CXXFLAGS) $(CXXFLAGS) -c -o gap_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`

gap_tmp-init_tests.o: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gap_tmp_CXXFLAGS) $(CXXFLAGS) -MT gap_tmp-init_tests.o -MD -MP -MF $(DEPDIR)/gap_tmp-init_tests.Tpo -c -o gap_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/gap_tmp-init_tests.Tpo $(DEPDIR)/gap_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='gap_tmp-init_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gap_tmp_CXXFLAGS) $(CXXFLAGS) -c -o gap_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp

gap_tmp-init_tests.obj: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gap_tmp_CXXFLAGS) $(CXXFLAGS) -MT gap_tmp-init_tests.obj -MD -MP -MF $(DEPDIR)/gap_tmp-init_tests.Tpo -c -o gap_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gap_tmp-init_tests.Tpo $(DEPDIR)/gap_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='gap_tmp-init_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gap_tmp_CXXFLAGS) $(CXXFLAGS) -c -o gap_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`

gap_tmp-util.o: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gap_tmp_CXXFLAGS) $(CXXFLAGS) -MT gap_tmp-util.o -MD -MP -MF $(DEPDIR)/gap_tmp-util.Tpo -c -o gap_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/gap_tmp-util.Tpo $(DEPDIR)/gap_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='gap_tmp-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gap_tmp_CXXFLAGS) $(CXXFLAGS) -c -o gap_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp

gap_tmp-util.obj: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gap_tmp_CXXFLAGS) $(CXXFLAGS) -MT gap_tmp-util.obj -MD -MP -MF $(DEPDIR)/gap_tmp-util.Tpo -c -o gap_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gap_tmp-util.Tpo $(DEPDIR)/gap_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='gap_tmp-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gap_tmp_CXXFLAGS) $(CXXFLAGS) -c -o gap_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`

maxt_tmp-maxt.o: maxt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(maxt_tmp_CXXFLAGS) $(CXXFLAGS) -MT maxt_tmp-maxt.o -MD -MP -MF $(DEPDIR)/maxt_tmp-maxt.Tpo -c -o maxt_tmp-maxt.o `test -f 'maxt.cpp' || echo '$(srcdir)/'`maxt.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/maxt_tmp-maxt.Tpo $(DEPDIR)/maxt_tmp-maxt.Po
#	$(AM_V_CXX)source='maxt.cpp' object='maxt_tmp-maxt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(maxt_tmp_CXXFLAGS) $(CXXFLAGS) -c -o maxt_tmp-maxt.o `test -f 'maxt.cpp' || echo '$(srcdir)/'`maxt.cpp

maxt_tmp-maxt.obj: maxt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(maxt_tmp_CXXFLAGS) $(CXXFLAGS) -MT maxt_tmp-maxt.obj -MD -MP -MF $(DEPDIR)/maxt_tmp-maxt.Tpo -c -o maxt_tmp-maxt.obj `if test -f 'maxt.cpp'; then $(CYGPATH_W) 'maxt.cpp'; else $(CYGPATH_W) '$(srcdir)/maxt.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/maxt_tmp-maxt.Tpo $(DEPDIR)/maxt_tmp-maxt.Po
#	$(AM_V_CXX)source='maxt.cpp' object='maxt_tmp-maxt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(maxt_tmp_CXXFLAGS) $(CXXFLAGS) -c -o maxt_tmp-maxt.obj `if test -f 'maxt.cpp'; then $(CYGPATH_W) 'maxt.cpp'; else $(CYGPATH_W) '$(srcdir)/maxt.cpp'; fi`

maxt_tmp-chisquare.o: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(maxt_tmp_CXXFLAGS) $(CXXFLAGS) -MT maxt_tmp-chisquare.o -MD -MP -MF $(DEPDIR)/maxt_tmp-chisquare.Tpo -c -o maxt_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/maxt_tmp-chisquare.Tpo $(DEPDIR)/maxt_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='maxt_tmp-chisquare.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(maxt_tmp_CXXFLAGS) $(CXXFLAGS) -c -o maxt_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp

maxt_tmp-chisquare.obj: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(maxt_tmp_CXXFLAGS) $(CXXFLAGS) -MT maxt_tmp-chisquare.obj -MD -MP -MF $(DEPDIR)/maxt_tmp-chisquare.Tpo -c -o maxt_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/maxt_tmp-chisquare.Tpo $(DEPDIR)/maxt_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='maxt_tmp-chisquare.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(maxt_tmp_CXXFLAGS) $(CXXFLAGS) -c -o maxt_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`

maxt_tmp-communicate.o: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(maxt_tmp_CXXFLAGS) $(CXXFLAGS) -MT maxt_tmp-communicate.o -MD -MP -MF $(DEPDIR)/maxt_tmp-communicate.Tpo -c -o maxt_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/maxt_tmp-communicate.Tpo $(DEPDIR)/maxt_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='maxt_tmp-communicate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(maxt_tmp_CXXFLAGS) $(CXXFLAGS) -c -o maxt_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp

maxt_tmp-communicate.obj: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(maxt_tmp_CXXFLAGS) $(CXXFLAGS) -MT maxt_tmp-communicate.obj -MD -MP -MF $(DEPDIR)/maxt_tmp-communicate.Tpo -c -o maxt_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/maxt_tmp-communicate.Tpo $(DEPDIR)/maxt_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='maxt_tmp-communicate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(maxt_tmp_CXXFLAGS) $(CXXFLAGS) -c -o maxt_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`

maxt_tmp-init_tests.o: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(maxt_tmp_CXXFLAGS) $(CXXFLAGS) -MT maxt_tmp-init_tests.o -MD -MP -MF $(DEPDIR)/maxt_tmp-init_tests.Tpo -c -o maxt_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/maxt_tmp-init_tests.Tpo $(DEPDIR)/maxt_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='maxt_tmp-init_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(maxt_tmp_CXXFLAGS) $(CXXFLAGS) -c -o maxt_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp

maxt_tmp-init_tests.obj: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(maxt_tmp_CXXFLAGS) $(CXXFLAGS) -MT maxt_tmp-init_tests.obj -MD -MP -MF $(DEPDIR)/maxt_tmp-init_tests.Tpo -c -o maxt_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/maxt_tmp-init_tests.Tpo $(DEPDIR)/maxt_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='maxt_tmp-init_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(maxt_tmp_CXXFLAGS) $(CXXFLAGS) -c -o maxt_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`

maxt_tmp-util.o: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(maxt_tmp_CXXFLAGS) $(CXXFLAGS) -MT maxt_tmp-util.o -MD -MP -MF $(DEPDIR)/maxt_tmp-util.Tpo -c -o maxt_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/maxt_tmp-util.Tpo $(DEPDIR)/maxt_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='maxt_tmp-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(maxt_tmp_CXXFLAGS) $(CXXFLAGS) -c -o maxt_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp

maxt_tmp-util.obj: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(maxt_tmp_CXXFLAGS) $(CXXFLAGS) -MT maxt_tmp-util.obj -MD -MP -MF $(DEPDIR)/maxt_tmp-util.Tpo -c -o maxt_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/maxt_tmp-util.Tpo $(DEPDIR)/maxt_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='maxt_tmp-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(maxt_tmp_CXXFLAGS) $(CXXFLAGS) -c -o maxt_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`

metropolis_tmp-metropolis.o: metropolis.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(metropolis_tmp_CXXFLAGS) $(CXXFLAGS) -MT metropolis_tmp-metropolis.o -MD -MP -MF $(DEPDIR)/metropolis_tmp-metropolis.Tpo -c -o metropolis_tmp-metropolis.o `test -f 'metropolis.cpp' || echo '$(srcdir)/'`metropolis.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/metropolis_tmp-metropolis.Tpo $(DEPDIR)/metropolis_tmp-metropolis.Po
#	$(AM_V_CXX)source='metropolis.cpp' object='metropolis_tmp-metropolis.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(metropolis_tmp_CXXFLAGS) $(CXXFLAGS) -c -o metropolis_tmp-metropolis.o `test -f 'metropolis.cpp' || echo '$(srcdir)/'`metropolis.cpp

metropolis_tmp-metropolis.obj: metropolis.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(metropolis_tmp_CXXFLAGS) $(CXXFLAGS) -MT metropolis_tmp-metropolis.obj -MD -MP -MF $(DEPDIR)/metropolis_tmp-metropolis.Tpo -c -o metropolis_tmp-metropolis.obj `if test -f 'metropolis.cpp'; then $(CYGPATH_W) 'metropolis.cpp'; else $(CYGPATH_W) '$(srcdir)/metropolis.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/metropolis_tmp-metropolis.Tpo $(DEPDIR)/metropolis_tmp-metropolis.Po
#	$(AM_V_CXX)source='metropolis.cpp' object='metropolis_tmp-metropolis.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(metropolis_tmp_CXXFLAGS) $(CXXFLAGS) -c -o metropolis_tmp-metropolis.obj `if test -f 'metropolis.cpp'; then $(CYGPATH_W) 'metropolis.cpp'; else $(CYGPATH_W) '$(srcdir)/metropolis.cpp'; fi`

metropolis_tmp-chisquare.o: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(metropolis_tmp_CXXFLAGS) $(CXXFLAGS) -MT metropolis_tmp-chisquare.o -MD -MP -MF $(DEPDIR)/metropolis_tmp-chisquare.Tpo -c -o metropolis_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/metropolis_tmp-chisquare.Tpo $(DEPDIR)/metropolis_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='metropolis_tmp-chisquare.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(metropolis_tmp_CXXFLAGS) $(CXXFLAGS) -c -o metropolis_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp

metropolis_tmp-chisquare.obj: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(metropolis_tmp_CXXFLAGS) $(CXXFLAGS) -MT metropolis_tmp-chisquare.obj -MD -MP -MF $(DEPDIR)/metropolis_tmp-chisquare.Tpo -c -o metropolis_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/metropolis_tmp-chisquare.Tpo $(DEPDIR)/metropolis_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='metropolis_tmp-chisquare.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(metropolis_tmp_CXXFLAGS) $(CXXFLAGS) -c -o metropolis_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`

metropolis_tmp-communicate.o: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(metropolis_tmp_CXXFLAGS) $(CXXFLAGS) -MT metropolis_tmp-communicate.o -MD -MP -MF $(DEPDIR)/metropolis_tmp-communicate.Tpo -c -o metropolis_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/metropolis_tmp-communicate.Tpo $(DEPDIR)/metropolis_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='metropolis_tmp-communicate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(metropolis_tmp_CXXFLAGS) $(CXXFLAGS) -c -o metropolis_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp

metropolis_tmp-communicate.obj: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(metropolis_tmp_CXXFLAGS) $(CXXFLAGS) -MT metropolis_tmp-communicate.obj -MD -MP -MF $(DEPDIR)/metropolis_tmp-communicate.Tpo -c -o metropolis_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/metropolis_tmp-communicate.Tpo $(DEPDIR)/metropolis_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='metropolis_tmp-communicate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(metropolis_tmp_CXXFLAGS) $(CXXFLAGS) -c -o metropolis_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`

metropolis_tmp-init_tests.o: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(metropolis_tmp_CXXFLAGS) $(CXXFLAGS) -MT metropolis_tmp-init_tests.o -MD -MP -MF $(DEPDIR)/metropolis_tmp-init_tests.Tpo -c -o metropolis_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/metropolis_tmp-init_tests.Tpo $(DEPDIR)/metropolis_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='metropolis_tmp-init_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(metropolis_tmp_CXXFLAGS) $(CXXFLAGS) -c -o metropolis_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp

metropolis_tmp-init_tests.obj: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(metropolis_tmp_CXXFLAGS) $(CXXFLAGS) -MT metropolis_tmp-init_tests.obj -MD -MP -MF $(DEPDIR)/metropolis_tmp-init_tests.Tpo -c -o metropolis_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/metropolis_tmp-init_tests.Tpo $(DEPDIR)/metropolis_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='metropolis_tmp-init_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(metropolis_tmp_CXXFLAGS) $(CXXFLAGS) -c -o metropolis_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`

metropolis_tmp-util.o: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(metropolis_tmp_CXXFLAGS) $(CXXFLAGS) -MT metropolis_tmp-util.o -MD -MP -MF $(DEPDIR)/metropolis_tmp-util.Tpo -c -o metropolis_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/metropolis_tmp-util.Tpo $(DEPDIR)/metropolis_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='metropolis_tmp-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(metropolis_tmp_CXXFLAGS) $(CXXFLAGS) -c -o metropolis_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp

metropolis_tmp-util.obj: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(metropolis_tmp_CXXFLAGS) $(CXXFLAGS) -MT metropolis_tmp-util.obj -MD -MP -MF $(DEPDIR)/metropolis_tmp-util.Tpo -c -o metropolis_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/metropolis_tmp-util.Tpo $(DEPDIR)/metropolis_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='metropolis_tmp-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(metropolis_tmp_CXXFLAGS) $(CXXFLAGS) -c -o metropolis_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`

perm_tmp-perm.o: perm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(perm_tmp_CXXFLAGS) $(CXXFLAGS) -MT perm_tmp-perm.o -MD -MP -MF $(DEPDIR)/perm_tmp-perm.Tpo -c -o perm_tmp-perm.o `test -f 'perm.cpp' || echo '$(srcdir)/'`perm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/perm_tmp-perm.Tpo $(DEPDIR)/perm_tmp-perm.Po
#	$(AM_V_CXX)source='perm.cpp' object='perm_tmp-perm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(perm_tmp_CXXFLAGS) $(CXXFLAGS) -c -o perm_tmp-perm.o `test -f 'perm.cpp' || echo '$(srcdir)/'`perm.cpp

perm_tmp-perm.obj: perm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(perm_tmp_CXXFLAGS) $(CXXFLAGS) -MT perm_tmp-perm.obj -MD -MP -MF $(DEPDIR)/perm_tmp-perm.Tpo -c -o perm_tmp-perm.obj `if test -f 'perm.cpp'; then $(CYGPATH_W) 'perm.cpp'; else $(CYGPATH_W) '$(srcdir)/perm.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/perm_tmp-perm.Tpo $(DEPDIR)/perm_tmp-perm.Po
#	$(AM_V_CXX)source='perm.cpp' object='perm_tmp-perm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(perm_tmp_CXXFLAGS) $(CXXFLAGS) -c -o perm_tmp-perm.obj `if test -f 'perm.cpp'; then $(CYGPATH_W) 'perm.cpp'; else $(CYGPATH_W) '$(srcdir)/perm.cpp'; fi`

perm_tmp-chisquare.o: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(perm_tmp_CXXFLAGS) $(CXXFLAGS) -MT perm_tmp-chisquare.o -MD -MP -MF $(DEPDIR)/perm_tmp-chisquare.Tpo -c -o perm_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/perm_tmp-chisquare.Tpo $(DEPDIR)/perm_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='perm_tmp-chisquare.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(perm_tmp_CXXFLAGS) $(CXXFLAGS) -c -o perm_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp

perm_tmp-chisquare.obj: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(perm_tmp_CXXFLAGS) $(CXXFLAGS) -MT perm_tmp-chisquare.obj -MD -MP -MF $(DEPDIR)/perm_tmp-chisquare.Tpo -c -o perm_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/perm_tmp-chisquare.Tpo $(DEPDIR)/perm_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='perm_tmp-chisquare.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(perm_tmp_CXXFLAGS) $(CXXFLAGS) -c -o perm_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`

perm_tmp-communicate.o: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(perm_tmp_CXXFLAGS) $(CXXFLAGS) -MT perm_tmp-communicate.o -MD -MP -MF $(DEPDIR)/perm_tmp-communicate.Tpo -c -o perm_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/perm_tmp-communicate.Tpo $(DEPDIR)/perm_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='perm_tmp-communicate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(perm_tmp_CXXFLAGS) $(CXXFLAGS) -c -o perm_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp

perm_tmp-communicate.obj: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(perm_tmp_CXXFLAGS) $(CXXFLAGS) -MT perm_tmp-communicate.obj -MD -MP -MF $(DEPDIR)/perm_tmp-communicate.Tpo -c -o perm_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/perm_tmp-communicate.Tpo $(DEPDIR)/perm_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='perm_tmp-communicate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(perm_tmp_CXXFLAGS) $(CXXFLAGS) -c -o perm_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`

perm_tmp-init_tests.o: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(perm_tmp_CXXFLAGS) $(CXXFLAGS) -MT perm_tmp-init_tests.o -MD -MP -MF $(DEPDIR)/perm_tmp-init_tests.Tpo -c -o perm_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/perm_tmp-init_tests.Tpo $(DEPDIR)/perm_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='perm_tmp-init_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(perm_tmp_CXXFLAGS) $(CXXFLAGS) -c -o perm_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp

perm_tmp-init_tests.obj: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(perm_tmp_CXXFLAGS) $(CXXFLAGS) -MT perm_tmp-init_tests.obj -MD -MP -MF $(DEPDIR)/perm_tmp-init_tests.Tpo -c -o perm_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/perm_tmp-init_tests.Tpo $(DEPDIR)/perm_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='perm_tmp-init_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(perm_tmp_CXXFLAGS) $(CXXFLAGS) -c -o perm_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`

perm_tmp-util.o: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(perm_tmp_CXXFLAGS) $(CXXFLAGS) -MT perm_tmp-util.o -MD -MP -MF $(DEPDIR)/perm_tmp-util.Tpo -c -o perm_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/perm_tmp-util.Tpo $(DEPDIR)/perm_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='perm_tmp-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(perm_tmp_CXXFLAGS) $(CXXFLAGS) -c -o perm_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp

perm_tmp-util.obj: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(perm_tmp_CXXFLAGS) $(CXXFLAGS) -MT perm_tmp-util.obj -MD -MP -MF $(DEPDIR)/perm_tmp-util.Tpo -c -o perm_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/perm_tmp-util.Tpo $(DEPDIR)/perm_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='perm_tmp-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(perm_tmp_CXXFLAGS) $(CXXFLAGS) -c -o perm_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`

poker_tmp-poker.o: poker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -MT poker_tmp-poker.o -MD -MP -MF $(DEPDIR)/poker_tmp-poker.Tpo -c -o poker_tmp-poker.o `test -f 'poker.cpp' || echo '$(srcdir)/'`poker.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/poker_tmp-poker.Tpo $(DEPDIR)/poker_tmp-poker.Po
#	$(AM_V_CXX)source='poker.cpp' object='poker_tmp-poker.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -c -o poker_tmp-poker.o `test -f 'poker.cpp' || echo '$(srcdir)/'`poker.cpp

poker_tmp-poker.obj: poker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -MT poker_tmp-poker.obj -MD -MP -MF $(DEPDIR)/poker_tmp-poker.Tpo -c -o poker_tmp-poker.obj `if test -f 'poker.cpp'; then $(CYGPATH_W) 'poker.cpp'; else $(CYGPATH_W) '$(srcdir)/poker.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/poker_tmp-poker.Tpo $(DEPDIR)/poker_tmp-poker.Po
#	$(AM_V_CXX)source='poker.cpp' object='poker_tmp-poker.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -c -o poker_tmp-poker.obj `if test -f 'poker.cpp'; then $(CYGPATH_W) 'poker.cpp'; else $(CYGPATH_W) '$(srcdir)/poker.cpp'; fi`

poker_tmp-chisquare.o: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -MT poker_tmp-chisquare.o -MD -MP -MF $(DEPDIR)/poker_tmp-chisquare.Tpo -c -o poker_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/poker_tmp-chisquare.Tpo $(DEPDIR)/poker_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='poker_tmp-chisquare.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -c -o poker_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp

poker_tmp-chisquare.obj: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -MT poker_tmp-chisquare.obj -MD -MP -MF $(DEPDIR)/poker_tmp-chisquare.Tpo -c -o poker_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/poker_tmp-chisquare.Tpo $(DEPDIR)/poker_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='poker_tmp-chisquare.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -c -o poker_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`

poker_tmp-communicate.o: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -MT poker_tmp-communicate.o -MD -MP -MF $(DEPDIR)/poker_tmp-communicate.Tpo -c -o poker_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/poker_tmp-communicate.Tpo $(DEPDIR)/poker_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='poker_tmp-communicate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -c -o poker_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp

poker_tmp-communicate.obj: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -MT poker_tmp-communicate.obj -MD -MP -MF $(DEPDIR)/poker_tmp-communicate.Tpo -c -o poker_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/poker_tmp-communicate.Tpo $(DEPDIR)/poker_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='poker_tmp-communicate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -c -o poker_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`

poker_tmp-init_tests.o: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -MT poker_tmp-init_tests.o -MD -MP -MF $(DEPDIR)/poker_tmp-init_tests.Tpo -c -o poker_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/poker_tmp-init_tests.Tpo $(DEPDIR)/poker_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='poker_tmp-init_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -c -o poker_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp

poker_tmp-init_tests.obj: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -MT poker_tmp-init_tests.obj -MD -MP -MF $(DEPDIR)/poker_tmp-init_tests.Tpo -c -o poker_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/poker_tmp-init_tests.Tpo $(DEPDIR)/poker_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='poker_tmp-init_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -c -o poker_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`

poker_tmp-util.o: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -MT poker_tmp-util.o -MD -MP -MF $(DEPDIR)/poker_tmp-util.Tpo -c -o poker_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/poker_tmp-util.Tpo $(DEPDIR)/poker_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='poker_tmp-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -c -o poker_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp

poker_tmp-util.obj: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -MT poker_tmp-util.obj -MD -MP -MF $(DEPDIR)/poker_tmp-util.Tpo -c -o poker_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/poker_tmp-util.Tpo $(DEPDIR)/poker_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='poker_tmp-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -c -o poker_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`

poker_tmp-stirling.o: stirling.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -MT poker_tmp-stirling.o -MD -MP -MF $(DEPDIR)/poker_tmp-stirling.Tpo -c -o poker_tmp-stirling.o `test -f 'stirling.cpp' || echo '$(srcdir)/'`stirling.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/poker_tmp-stirling.Tpo $(DEPDIR)/poker_tmp-stirling.Po
#	$(AM_V_CXX)source='stirling.cpp' object='poker_tmp-stirling.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -c -o poker_tmp-stirling.o `test -f 'stirling.cpp' || echo '$(srcdir)/'`stirling.cpp

poker_tmp-stirling.obj: stirling.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -MT poker_tmp-stirling.obj -MD -MP -MF $(DEPDIR)/poker_tmp-stirling.Tpo -c -o poker_tmp-stirling.obj `if test -f 'stirling.cpp'; then $(CYGPATH_W) 'stirling.cpp'; else $(CYGPATH_W) '$(srcdir)/stirling.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/poker_tmp-stirling.Tpo $(DEPDIR)/poker_tmp-stirling.Po
#	$(AM_V_CXX)source='stirling.cpp' object='poker_tmp-stirling.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(poker_tmp_CXXFLAGS) $(CXXFLAGS) -c -o poker_tmp-stirling.obj `if test -f 'stirling.cpp'; then $(CYGPATH_W) 'stirling.cpp'; else $(CYGPATH_W) '$(srcdir)/stirling.cpp'; fi`

random_walk_tmp-random_walk.o: random_walk.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(random_walk_tmp_CXXFLAGS) $(CXXFLAGS) -MT random_walk_tmp-random_walk.o -MD -MP -MF $(DEPDIR)/random_walk_tmp-random_walk.Tpo -c -o random_walk_tmp-random_walk.o `test -f 'random_walk.cpp' || echo '$(srcdir)/'`random_walk.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/random_walk_tmp-random_walk.Tpo $(DEPDIR)/random_walk_tmp-random_walk.Po
#	$(AM_V_CXX)source='random_walk.cpp' object='random_walk_tmp-random_walk.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(random_walk_tmp_CXXFLAGS) $(CXXFLAGS) -c -o random_walk_tmp-random_walk.o `test -f 'random_walk.cpp' || echo '$(srcdir)/'`random_walk.cpp

random_walk_tmp-random_walk.obj: random_walk.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(random_walk_tmp_CXXFLAGS) $(CXXFLAGS) -MT random_walk_tmp-random_walk.obj -MD -MP -MF $(DEPDIR)/random_walk_tmp-random_walk.Tpo -c -o random_walk_tmp-random_walk.obj `if test -f 'random_walk.cpp'; then $(CYGPATH_W) 'random_walk.cpp'; else $(CYGPATH_W) '$(srcdir)/random_walk.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/random_walk_tmp-random_walk.Tpo $(DEPDIR)/random_walk_tmp-random_walk.Po
#	$(AM_V_CXX)source='random_walk.cpp' object='random_walk_tmp-random_walk.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(random_walk_tmp_CXXFLAGS) $(CXXFLAGS) -c -o random_walk_tmp-random_walk.obj `if test -f 'random_walk.cpp'; then $(CYGPATH_W) 'random_walk.cpp'; else $(CYGPATH_W) '$(srcdir)/random_walk.cpp'; fi`

random_walk_tmp-chisquare.o: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(random_walk_tmp_CXXFLAGS) $(CXXFLAGS) -MT random_walk_tmp-chisquare.o -MD -MP -MF $(DEPDIR)/random_walk_tmp-chisquare.Tpo -c -o random_walk_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/random_walk_tmp-chisquare.Tpo $(DEPDIR)/random_walk_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='random_walk_tmp-chisquare.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(random_walk_tmp_CXXFLAGS) $(CXXFLAGS) -c -o random_walk_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp

random_walk_tmp-chisquare.obj: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(random_walk_tmp_CXXFLAGS) $(CXXFLAGS) -MT random_walk_tmp-chisquare.obj -MD -MP -MF $(DEPDIR)/random_walk_tmp-chisquare.Tpo -c -o random_walk_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/random_walk_tmp-chisquare.Tpo $(DEPDIR)/random_walk_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='random_walk_tmp-chisquare.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(random_walk_tmp_CXXFLAGS) $(CXXFLAGS) -c -o random_walk_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`

random_walk_tmp-communicate.o: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(random_walk_tmp_CXXFLAGS) $(CXXFLAGS) -MT random_walk_tmp-communicate.o -MD -MP -MF $(DEPDIR)/random_walk_tmp-communicate.Tpo -c -o random_walk_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/random_walk_tmp-communicate.Tpo $(DEPDIR)/random_walk_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='random_walk_tmp-communicate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(random_walk_tmp_CXXFLAGS) $(CXXFLAGS) -c -o random_walk_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp

random_walk_tmp-communicate.obj: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(random_walk_tmp_CXXFLAGS) $(CXXFLAGS) -MT random_walk_tmp-communicate.obj -MD -MP -MF $(DEPDIR)/random_walk_tmp-communicate.Tpo -c -o random_walk_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/random_walk_tmp-communicate.Tpo $(DEPDIR)/random_walk_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='random_walk_tmp-communicate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(random_walk_tmp_CXXFLAGS) $(CXXFLAGS) -c -o random_walk_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`

random_walk_tmp-init_tests.o: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(random_walk_tmp_CXXFLAGS) $(CXXFLAGS) -MT random_walk_tmp-init_tests.o -MD -MP -MF $(DEPDIR)/random_walk_tmp-init_tests.Tpo -c -o random_walk_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/random_walk_tmp-init_tests.Tpo $(DEPDIR)/random_walk_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='random_walk_tmp-init_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(random_walk_tmp_CXXFLAGS) $(CXXFLAGS) -c -o random_walk_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp

random_walk_tmp-init_tests.obj: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(random_walk_tmp_CXXFLAGS) $(CXXFLAGS) -MT random_walk_tmp-init_tests.obj -MD -MP -MF $(DEPDIR)/random_walk_tmp-init_tests.Tpo -c -o random_walk_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/random_walk_tmp-init_tests.Tpo $(DEPDIR)/random_walk_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='random_walk_tmp-init_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(random_walk_tmp_CXXFLAGS) $(CXXFLAGS) -c -o random_walk_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`

random_walk_tmp-util.o: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(random_walk_tmp_CXXFLAGS) $(CXXFLAGS) -MT random_walk_tmp-util.o -MD -MP -MF $(DEPDIR)/random_walk_tmp-util.Tpo -c -o random_walk_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/random_walk_tmp-util.Tpo $(DEPDIR)/random_walk_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='random_walk_tmp-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(random_walk_tmp_CXXFLAGS) $(CXXFLAGS) -c -o random_walk_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp

random_walk_tmp-util.obj: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(random_walk_tmp_CXXFLAGS) $(CXXFLAGS) -MT random_walk_tmp-util.obj -MD -MP -MF $(DEPDIR)/random_walk_tmp-util.Tpo -c -o random_walk_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/random_walk_tmp-util.Tpo $(DEPDIR)/random_walk_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='random_walk_tmp-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(random_walk_tmp_CXXFLAGS) $(CXXFLAGS) -c -o random_walk_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`

runs_tmp-runs.o: runs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(runs_tmp_CXXFLAGS) $(CXXFLAGS) -MT runs_tmp-runs.o -MD -MP -MF $(DEPDIR)/runs_tmp-runs.Tpo -c -o runs_tmp-runs.o `test -f 'runs.cpp' || echo '$(srcdir)/'`runs.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/runs_tmp-runs.Tpo $(DEPDIR)/runs_tmp-runs.Po
#	$(AM_V_CXX)source='runs.cpp' object='runs_tmp-runs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(runs_tmp_CXXFLAGS) $(CXXFLAGS) -c -o runs_tmp-runs.o `test -f 'runs.cpp' || echo '$(srcdir)/'`runs.cpp

runs_tmp-runs.obj: runs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(runs_tmp_CXXFLAGS) $(CXXFLAGS) -MT runs_tmp-runs.obj -MD -MP -MF $(DEPDIR)/runs_tmp-runs.Tpo -c -o runs_tmp-runs.obj `if test -f 'runs.cpp'; then $(CYGPATH_W) 'runs.cpp'; else $(CYGPATH_W) '$(srcdir)/runs.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/runs_tmp-runs.Tpo $(DEPDIR)/runs_tmp-runs.Po
#	$(AM_V_CXX)source='runs.cpp' object='runs_tmp-runs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(runs_tmp_CXXFLAGS) $(CXXFLAGS) -c -o runs_tmp-runs.obj `if test -f 'runs.cpp'; then $(CYGPATH_W) 'runs.cpp'; else $(CYGPATH_W) '$(srcdir)/runs.cpp'; fi`

runs_tmp-chisquare.o: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(runs_tmp_CXXFLAGS) $(CXXFLAGS) -MT runs_tmp-chisquare.o -MD -MP -MF $(DEPDIR)/runs_tmp-chisquare.Tpo -c -o runs_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/runs_tmp-chisquare.Tpo $(DEPDIR)/runs_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='runs_tmp-chisquare.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(runs_tmp_CXXFLAGS) $(CXXFLAGS) -c -o runs_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp

runs_tmp-chisquare.obj: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(runs_tmp_CXXFLAGS) $(CXXFLAGS) -MT runs_tmp-chisquare.obj -MD -MP -MF $(DEPDIR)/runs_tmp-chisquare.Tpo -c -o runs_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/runs_tmp-chisquare.Tpo $(DEPDIR)/runs_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='runs_tmp-chisquare.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(runs_tmp_CXXFLAGS) $(CXXFLAGS) -c -o runs_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`

runs_tmp-communicate.o: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(runs_tmp_CXXFLAGS) $(CXXFLAGS) -MT runs_tmp-communicate.o -MD -MP -MF $(DEPDIR)/runs_tmp-communicate.Tpo -c -o runs_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/runs_tmp-communicate.Tpo $(DEPDIR)/runs_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='runs_tmp-communicate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(runs_tmp_CXXFLAGS) $(CXXFLAGS) -c -o runs_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp

runs_tmp-communicate.obj: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(runs_tmp_CXXFLAGS) $(CXXFLAGS) -MT runs_tmp-communicate.obj -MD -MP -MF $(DEPDIR)/runs_tmp-communicate.Tpo -c -o runs_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/runs_tmp-communicate.Tpo $(DEPDIR)/runs_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='runs_tmp-communicate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(runs_tmp_CXXFLAGS) $(CXXFLAGS) -c -o runs_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`

runs_tmp-init_tests.o: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(runs_tmp_CXXFLAGS) $(CXXFLAGS) -MT runs_tmp-init_tests.o -MD -MP -MF $(DEPDIR)/runs_tmp-init_tests.Tpo -c -o runs_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/runs_tmp-init_tests.Tpo $(DEPDIR)/runs_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='runs_tmp-init_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(runs_tmp_CXXFLAGS) $(CXXFLAGS) -c -o runs_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp

runs_tmp-init_tests.obj: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(runs_tmp_CXXFLAGS) $(CXXFLAGS) -MT runs_tmp-init_tests.obj -MD -MP -MF $(DEPDIR)/runs_tmp-init_tests.Tpo -c -o runs_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/runs_tmp-init_tests.Tpo $(DEPDIR)/runs_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='runs_tmp-init_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(runs_tmp_CXXFLAGS) $(CXXFLAGS) -c -o runs_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`

runs_tmp-util.o: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(runs_tmp_CXXFLAGS) $(CXXFLAGS) -MT runs_tmp-util.o -MD -MP -MF $(DEPDIR)/runs_tmp-util.Tpo -c -o runs_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/runs_tmp-util.Tpo $(DEPDIR)/runs_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='runs_tmp-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(runs_tmp_CXXFLAGS) $(CXXFLAGS) -c -o runs_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp

runs_tmp-util.obj: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(runs_tmp_CXXFLAGS) $(CXXFLAGS) -MT runs_tmp-util.obj -MD -MP -MF $(DEPDIR)/runs_tmp-util.Tpo -c -o runs_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/runs_tmp-util.Tpo $(DEPDIR)/runs_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='runs_tmp-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(runs_tmp_CXXFLAGS) $(CXXFLAGS) -c -o runs_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`

serial_tmp-serial.o: serial.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(serial_tmp_CXXFLAGS) $(CXXFLAGS) -MT serial_tmp-serial.o -MD -MP -MF $(DEPDIR)/serial_tmp-serial.Tpo -c -o serial_tmp-serial.o `test -f 'serial.cpp' || echo '$(srcdir)/'`serial.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/serial_tmp-serial.Tpo $(DEPDIR)/serial_tmp-serial.Po
#	$(AM_V_CXX)source='serial.cpp' object='serial_tmp-serial.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(serial_tmp_CXXFLAGS) $(CXXFLAGS) -c -o serial_tmp-serial.o `test -f 'serial.cpp' || echo '$(srcdir)/'`serial.cpp

serial_tmp-serial.obj: serial.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(serial_tmp_CXXFLAGS) $(CXXFLAGS) -MT serial_tmp-serial.obj -MD -MP -MF $(DEPDIR)/serial_tmp-serial.Tpo -c -o serial_tmp-serial.obj `if test -f 'serial.cpp'; then $(CYGPATH_W) 'serial.cpp'; else $(CYGPATH_W) '$(srcdir)/serial.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/serial_tmp-serial.Tpo $(DEPDIR)/serial_tmp-serial.Po
#	$(AM_V_CXX)source='serial.cpp' object='serial_tmp-serial.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(serial_tmp_CXXFLAGS) $(CXXFLAGS) -c -o serial_tmp-serial.obj `if test -f 'serial.cpp'; then $(CYGPATH_W) 'serial.cpp'; else $(CYGPATH_W) '$(srcdir)/serial.cpp'; fi`

serial_tmp-chisquare.o: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(serial_tmp_CXXFLAGS) $(CXXFLAGS) -MT serial_tmp-chisquare.o -MD -MP -MF $(DEPDIR)/serial_tmp-chisquare.Tpo -c -o serial_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/serial_tmp-chisquare.Tpo $(DEPDIR)/serial_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='serial_tmp-chisquare.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(serial_tmp_CXXFLAGS) $(CXXFLAGS) -c -o serial_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp

serial_tmp-chisquare.obj: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(serial_tmp_CXXFLAGS) $(CXXFLAGS) -MT serial_tmp-chisquare.obj -MD -MP -MF $(DEPDIR)/serial_tmp-chisquare.Tpo -c -o serial_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/serial_tmp-chisquare.Tpo $(DEPDIR)/serial_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='serial_tmp-chisquare.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(serial_tmp_CXXFLAGS) $(CXXFLAGS) -c -o serial_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`

serial_tmp-communicate.o: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(serial_tmp_CXXFLAGS) $(CXXFLAGS) -MT serial_tmp-communicate.o -MD -MP -MF $(DEPDIR)/serial_tmp-communicate.Tpo -c -o serial_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/serial_tmp-communicate.Tpo $(DEPDIR)/serial_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='serial_tmp-communicate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(serial_tmp_CXXFLAGS) $(CXXFLAGS) -c -o serial_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp

serial_tmp-communicate.obj: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(serial_tmp_CXXFLAGS) $(CXXFLAGS) -MT serial_tmp-communicate.obj -MD -MP -MF $(DEPDIR)/serial_tmp-communicate.Tpo -c -o serial_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/serial_tmp-communicate.Tpo $(DEPDIR)/serial_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='serial_tmp-communicate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(serial_tmp_CXXFLAGS) $(CXXFLAGS) -c -o serial_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`

serial_tmp-init_tests.o: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(serial_tmp_CXXFLAGS) $(CXXFLAGS) -MT serial_tmp-init_tests.o -MD -MP -MF $(DEPDIR)/serial_tmp-init_tests.Tpo -c -o serial_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/serial_tmp-init_tests.Tpo $(DEPDIR)/serial_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='serial_tmp-init_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(serial_tmp_CXXFLAGS) $(CXXFLAGS) -c -o serial_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp

serial_tmp-init_tests.obj: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(serial_tmp_CXXFLAGS) $(CXXFLAGS) -MT serial_tmp-init_tests.obj -MD -MP -MF $(DEPDIR)/serial_tmp-init_tests.Tpo -c -o serial_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/serial_tmp-init_tests.Tpo $(DEPDIR)/serial_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='serial_tmp-init_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(serial_tmp_CXXFLAGS) $(CXXFLAGS) -c -o serial_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`

serial_tmp-util.o: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(serial_tmp_CXXFLAGS) $(CXXFLAGS) -MT serial_tmp-util.o -MD -MP -MF $(DEPDIR)/serial_tmp-util.Tpo -c -o serial_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/serial_tmp-util.Tpo $(DEPDIR)/serial_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='serial_tmp-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(serial_tmp_CXXFLAGS) $(CXXFLAGS) -c -o serial_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp

serial_tmp-util.obj: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(serial_tmp_CXXFLAGS) $(CXXFLAGS) -MT serial_tmp-util.obj -MD -MP -MF $(DEPDIR)/serial_tmp-util.Tpo -c -o serial_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/serial_tmp-util.Tpo $(DEPDIR)/serial_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='serial_tmp-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(serial_tmp_CXXFLAGS) $(CXXFLAGS) -c -o serial_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`

sum_tmp-sum.o: sum.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sum_tmp_CXXFLAGS) $(CXXFLAGS) -MT sum_tmp-sum.o -MD -MP -MF $(DEPDIR)/sum_tmp-sum.Tpo -c -o sum_tmp-sum.o `test -f 'sum.cpp' || echo '$(srcdir)/'`sum.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sum_tmp-sum.Tpo $(DEPDIR)/sum_tmp-sum.Po
#	$(AM_V_CXX)source='sum.cpp' object='sum_tmp-sum.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sum_tmp_CXXFLAGS) $(CXXFLAGS) -c -o sum_tmp-sum.o `test -f 'sum.cpp' || echo '$(srcdir)/'`sum.cpp

sum_tmp-sum.obj: sum.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sum_tmp_CXXFLAGS) $(CXXFLAGS) -MT sum_tmp-sum.obj -MD -MP -MF $(DEPDIR)/sum_tmp-sum.Tpo -c -o sum_tmp-sum.obj `if test -f 'sum.cpp'; then $(CYGPATH_W) 'sum.cpp'; else $(CYGPATH_W) '$(srcdir)/sum.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sum_tmp-sum.Tpo $(DEPDIR)/sum_tmp-sum.Po
#	$(AM_V_CXX)source='sum.cpp' object='sum_tmp-sum.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sum_tmp_CXXFLAGS) $(CXXFLAGS) -c -o sum_tmp-sum.obj `if test -f 'sum.cpp'; then $(CYGPATH_W) 'sum.cpp'; else $(CYGPATH_W) '$(srcdir)/sum.cpp'; fi`

sum_tmp-chisquare.o: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sum_tmp_CXXFLAGS) $(CXXFLAGS) -MT sum_tmp-chisquare.o -MD -MP -MF $(DEPDIR)/sum_tmp-chisquare.Tpo -c -o sum_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sum_tmp-chisquare.Tpo $(DEPDIR)/sum_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='sum_tmp-chisquare.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sum_tmp_CXXFLAGS) $(CXXFLAGS) -c -o sum_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp

sum_tmp-chisquare.obj: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sum_tmp_CXXFLAGS) $(CXXFLAGS) -MT sum_tmp-chisquare.obj -MD -MP -MF $(DEPDIR)/sum_tmp-chisquare.Tpo -c -o sum_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sum_tmp-chisquare.Tpo $(DEPDIR)/sum_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='sum_tmp-chisquare.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sum_tmp_CXXFLAGS) $(CXXFLAGS) -c -o sum_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`

sum_tmp-communicate.o: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sum_tmp_CXXFLAGS) $(CXXFLAGS) -MT sum_tmp-communicate.o -MD -MP -MF $(DEPDIR)/sum_tmp-communicate.Tpo -c -o sum_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sum_tmp-communicate.Tpo $(DEPDIR)/sum_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='sum_tmp-communicate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sum_tmp_CXXFLAGS) $(CXXFLAGS) -c -o sum_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp

sum_tmp-communicate.obj: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sum_tmp_CXXFLAGS) $(CXXFLAGS) -MT sum_tmp-communicate.obj -MD -MP -MF $(DEPDIR)/sum_tmp-communicate.Tpo -c -o sum_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sum_tmp-communicate.Tpo $(DEPDIR)/sum_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='sum_tmp-communicate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sum_tmp_CXXFLAGS) $(CXXFLAGS) -c -o sum_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`

sum_tmp-init_tests.o: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sum_tmp_CXXFLAGS) $(CXXFLAGS) -MT sum_tmp-init_tests.o -MD -MP -MF $(DEPDIR)/sum_tmp-init_tests.Tpo -c -o sum_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sum_tmp-init_tests.Tpo $(DEPDIR)/sum_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='sum_tmp-init_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sum_tmp_CXXFLAGS) $(CXXFLAGS) -c -o sum_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp

sum_tmp-init_tests.obj: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sum_tmp_CXXFLAGS) $(CXXFLAGS) -MT sum_tmp-init_tests.obj -MD -MP -MF $(DEPDIR)/sum_tmp-init_tests.Tpo -c -o sum_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sum_tmp-init_tests.Tpo $(DEPDIR)/sum_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='sum_tmp-init_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sum_tmp_CXXFLAGS) $(CXXFLAGS) -c -o sum_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`

sum_tmp-util.o: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sum_tmp_CXXFLAGS) $(CXXFLAGS) -MT sum_tmp-util.o -MD -MP -MF $(DEPDIR)/sum_tmp-util.Tpo -c -o sum_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sum_tmp-util.Tpo $(DEPDIR)/sum_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='sum_tmp-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sum_tmp_CXXFLAGS) $(CXXFLAGS) -c -o sum_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp

sum_tmp-util.obj: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sum_tmp_CXXFLAGS) $(CXXFLAGS) -MT sum_tmp-util.obj -MD -MP -MF $(DEPDIR)/sum_tmp-util.Tpo -c -o sum_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sum_tmp-util.Tpo $(DEPDIR)/sum_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='sum_tmp-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sum_tmp_CXXFLAGS) $(CXXFLAGS) -c -o sum_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`

wolff_tmp-wolff.o: wolff.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wolff_tmp_CXXFLAGS) $(CXXFLAGS) -MT wolff_tmp-wolff.o -MD -MP -MF $(DEPDIR)/wolff_tmp-wolff.Tpo -c -o wolff_tmp-wolff.o `test -f 'wolff.cpp' || echo '$(srcdir)/'`wolff.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/wolff_tmp-wolff.Tpo $(DEPDIR)/wolff_tmp-wolff.Po
#	$(AM_V_CXX)source='wolff.cpp' object='wolff_tmp-wolff.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wolff_tmp_CXXFLAGS) $(CXXFLAGS) -c -o wolff_tmp-wolff.o `test -f 'wolff.cpp' || echo '$(srcdir)/'`wolff.cpp

wolff_tmp-wolff.obj: wolff.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wolff_tmp_CXXFLAGS) $(CXXFLAGS) -MT wolff_tmp-wolff.obj -MD -MP -MF $(DEPDIR)/wolff_tmp-wolff.Tpo -c -o wolff_tmp-wolff.obj `if test -f 'wolff.cpp'; then $(CYGPATH_W) 'wolff.cpp'; else $(CYGPATH_W) '$(srcdir)/wolff.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/wolff_tmp-wolff.Tpo $(DEPDIR)/wolff_tmp-wolff.Po
#	$(AM_V_CXX)source='wolff.cpp' object='wolff_tmp-wolff.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wolff_tmp_CXXFLAGS) $(CXXFLAGS) -c -o wolff_tmp-wolff.obj `if test -f 'wolff.cpp'; then $(CYGPATH_W) 'wolff.cpp'; else $(CYGPATH_W) '$(srcdir)/wolff.cpp'; fi`

wolff_tmp-chisquare.o: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wolff_tmp_CXXFLAGS) $(CXXFLAGS) -MT wolff_tmp-chisquare.o -MD -MP -MF $(DEPDIR)/wolff_tmp-chisquare.Tpo -c -o wolff_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/wolff_tmp-chisquare.Tpo $(DEPDIR)/wolff_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='wolff_tmp-chisquare.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wolff_tmp_CXXFLAGS) $(CXXFLAGS) -c -o wolff_tmp-chisquare.o `test -f 'chisquare.cpp' || echo '$(srcdir)/'`chisquare.cpp

wolff_tmp-chisquare.obj: chisquare.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wolff_tmp_CXXFLAGS) $(CXXFLAGS) -MT wolff_tmp-chisquare.obj -MD -MP -MF $(DEPDIR)/wolff_tmp-chisquare.Tpo -c -o wolff_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/wolff_tmp-chisquare.Tpo $(DEPDIR)/wolff_tmp-chisquare.Po
#	$(AM_V_CXX)source='chisquare.cpp' object='wolff_tmp-chisquare.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wolff_tmp_CXXFLAGS) $(CXXFLAGS) -c -o wolff_tmp-chisquare.obj `if test -f 'chisquare.cpp'; then $(CYGPATH_W) 'chisquare.cpp'; else $(CYGPATH_W) '$(srcdir)/chisquare.cpp'; fi`

wolff_tmp-communicate.o: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wolff_tmp_CXXFLAGS) $(CXXFLAGS) -MT wolff_tmp-communicate.o -MD -MP -MF $(DEPDIR)/wolff_tmp-communicate.Tpo -c -o wolff_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/wolff_tmp-communicate.Tpo $(DEPDIR)/wolff_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='wolff_tmp-communicate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wolff_tmp_CXXFLAGS) $(CXXFLAGS) -c -o wolff_tmp-communicate.o `test -f 'communicate.cpp' || echo '$(srcdir)/'`communicate.cpp

wolff_tmp-communicate.obj: communicate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wolff_tmp_CXXFLAGS) $(CXXFLAGS) -MT wolff_tmp-communicate.obj -MD -MP -MF $(DEPDIR)/wolff_tmp-communicate.Tpo -c -o wolff_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/wolff_tmp-communicate.Tpo $(DEPDIR)/wolff_tmp-communicate.Po
#	$(AM_V_CXX)source='communicate.cpp' object='wolff_tmp-communicate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wolff_tmp_CXXFLAGS) $(CXXFLAGS) -c -o wolff_tmp-communicate.obj `if test -f 'communicate.cpp'; then $(CYGPATH_W) 'communicate.cpp'; else $(CYGPATH_W) '$(srcdir)/communicate.cpp'; fi`

wolff_tmp-init_tests.o: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wolff_tmp_CXXFLAGS) $(CXXFLAGS) -MT wolff_tmp-init_tests.o -MD -MP -MF $(DEPDIR)/wolff_tmp-init_tests.Tpo -c -o wolff_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/wolff_tmp-init_tests.Tpo $(DEPDIR)/wolff_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='wolff_tmp-init_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wolff_tmp_CXXFLAGS) $(CXXFLAGS) -c -o wolff_tmp-init_tests.o `test -f 'init_tests.cpp' || echo '$(srcdir)/'`init_tests.cpp

wolff_tmp-init_tests.obj: init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wolff_tmp_CXXFLAGS) $(CXXFLAGS) -MT wolff_tmp-init_tests.obj -MD -MP -MF $(DEPDIR)/wolff_tmp-init_tests.Tpo -c -o wolff_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/wolff_tmp-init_tests.Tpo $(DEPDIR)/wolff_tmp-init_tests.Po
#	$(AM_V_CXX)source='init_tests.cpp' object='wolff_tmp-init_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wolff_tmp_CXXFLAGS) $(CXXFLAGS) -c -o wolff_tmp-init_tests.obj `if test -f 'init_tests.cpp'; then $(CYGPATH_W) 'init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/init_tests.cpp'; fi`

wolff_tmp-util.o: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wolff_tmp_CXXFLAGS) $(CXXFLAGS) -MT wolff_tmp-util.o -MD -MP -MF $(DEPDIR)/wolff_tmp-util.Tpo -c -o wolff_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/wolff_tmp-util.Tpo $(DEPDIR)/wolff_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='wolff_tmp-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wolff_tmp_CXXFLAGS) $(CXXFLAGS) -c -o wolff_tmp-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp

wolff_tmp-util.obj: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wolff_tmp_CXXFLAGS) $(CXXFLAGS) -MT wolff_tmp-util.obj -MD -MP -MF $(DEPDIR)/wolff_tmp-util.Tpo -c -o wolff_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/wolff_tmp-util.Tpo $(DEPDIR)/wolff_tmp-util.Po
#	$(AM_V_CXX)source='util.cpp' object='wolff_tmp-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wolff_tmp_CXXFLAGS) $(CXXFLAGS) -c -o wolff_tmp-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(SCRIPTS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am clean clean-binPROGRAMS clean-generic cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-binSCRIPTS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-binSCRIPTS

sprngtest:
	@rm -f *.o
	@mv equidist.tmp equidist.$(GEN)
	@mv perm.tmp perm.$(GEN)
	@mv serial.tmp serial.$(GEN)
	@mv poker.tmp poker.$(GEN)
	@mv collisions.tmp collisions.$(GEN)
	@mv gap.tmp gap.$(GEN)
	@mv maxt.tmp maxt.$(GEN)
	@mv sum.tmp sum.$(GEN)
	@mv coupon.tmp coupon.$(GEN)
	@mv runs.tmp runs.$(GEN)
	@mv random_walk.tmp random_walk.$(GEN)
	@mv wolff.tmp wolff.$(GEN)
	@mv metropolis.tmp metropolis.$(GEN)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
